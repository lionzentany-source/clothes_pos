name: Android Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      ANDROID_KEYSTORE_PATH: android/app/release.keystore
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Decode keystore
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > "$ANDROID_KEYSTORE_PATH"
          ls -l android/app

      - name: Build split-per-abi APK (release, obfuscated)
        run: flutter build apk --release --split-per-abi --obfuscate --split-debug-info=build/symbols

      - name: Build AAB (release, obfuscated)
        run: flutter build appbundle --release --obfuscate --split-debug-info=build/symbols

      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: apks-${{ github.ref_name }}
          retention-days: 14
          path: |
            build/app/outputs/flutter-apk/*.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: aab-${{ github.ref_name }}
          retention-days: 14
          path: build/app/outputs/bundle/release/*.aab

      - name: Upload symbols (for stack traces)
        uses: actions/upload-artifact@v4
        with:
          name: symbols-${{ github.ref_name }}
          retention-days: 30
          path: build/symbols

      - name: Generate Release Notes
        id: notes
        run: |
          echo "ðŸš€ Release $GITHUB_REF_NAME" > release-notes.txt
          echo >> release-notes.txt
          echo "Changes:" >> release-notes.txt
          git log -n 30 --pretty='- %s' >> release-notes.txt || true
          echo >> release-notes.txt
          echo "Artifacts:" >> release-notes.txt
          ls -1 build/app/outputs/flutter-apk/*.apk >> release-notes.txt
          ls -1 build/app/outputs/bundle/release/*.aab >> release-notes.txt
          echo "release_notes_path=release-notes.txt" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.ref_name }}
          body_path: ${{ steps.notes.outputs.release_notes_path }}
          files: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optional Play Store deploy (requires service account JSON secret and fastlane / gradle plugin)
      # - name: Deploy to Play (internal track)
      #   if: startsWith(github.ref, 'refs/tags/') && secrets.PLAY_SERVICE_ACCOUNT_JSON != ''
      #   run: |
      #     echo "$PLAY_SERVICE_ACCOUNT_JSON" > play-key.json
      #     ./gradlew publishBundle --track internal --no-daemon
